import numpy as np
import matplotlib.pyplot as plt
from math import pi
from math import cos
from math import sin


from amat import AMat

DIM = 28

#train_data = AMat('mnist-rot/mnist_all_rotation_normalized_float_train_valid.amat').all[:20]
#test_data = AMat('mnist-rot/mnist_all_rotation_normalized_float_test.amat').all[:20]

## note: last entry is label
#x_train, y_train = train_data[:, :-1], train_data[:, -1:]
#x_test, y_test = test_data[:, :-1], test_data[:, -1:]

## reshape
#x_train = x_train.reshape(x_train.shape[0], 1, DIM, DIM)
#x_test = x_test.reshape(x_test.shape[0], 1, DIM, DIM)

#input_shape = x_train.shape[1:]  # should be (28, 28)

# TODO: normalize
def transform_input(M, x):
    v = np.zeros(x.shape)
    print x.shape
    for i in range(x.shape[0]):
        for j in range(x.shape[1]):
            c = np.matrix('{}; {}; 1'.format(i, j))
            ct = M * c
            # TODO: add interpolation
            ct = ct.astype(int)
            if ct.item(0) < x.shape[0] and ct.item(1) < x.shape[1]:
                print ct.item(0), ct.item(1)
                v[i][j] = x.item(ct.item(0), ct.item(1))
    return v


x_in = [

]
x_in = x_in[:-1]
x_in = np.matrix([x_in])
x_in = x_in.reshape(x_in.shape[0], DIM, DIM)


theta = .5
M = np.matrix('{}, {}, {}; {}, {}, {}'.format(cos(theta), -sin(theta), 0, sin(theta), cos(theta), 0))
#M = np.matrix('1, 0, 1; 0, 1, 4')
x_trans = transform_input(M, x_in)
theta = .3
M2 = np.matrix('{}, {}, {}; {}, {}, {}'.format(cos(theta), -sin(theta), 0, sin(theta), cos(theta), 0))
x_trans2 = transform_input(M2, x_in)

# subplot
plt.subplot(221)
plt.imshow(x_in)
plt.subplot(222)
plt.imshow(x_trans)
plt.subplot(223)
plt.imshow(x_trans2)
#plt.imshow(X_train[101].reshape(DIM, DIM), cmap='gray', interpolation='none')
plt.show()
